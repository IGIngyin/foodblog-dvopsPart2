function cov_2py6695m2f(){var path="C:\\Users\\tashi\\foodblog\\foodblog-dvops-part2\\public\\js\\commentDisplay.js";var hash="e44349b68349e9835ebcbcb5a539b4c54d2c0f77";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\tashi\\foodblog\\foodblog-dvops-part2\\public\\js\\commentDisplay.js",statementMap:{"0":{start:{line:3,column:20},end:{line:3,column:62}},"1":{start:{line:4,column:4},end:{line:6,column:5}},"2":{start:{line:5,column:8},end:{line:5,column:56}},"3":{start:{line:57,column:4},end:{line:79,column:5}},"4":{start:{line:58,column:25},end:{line:58,column:63}},"5":{start:{line:61,column:25},end:{line:61,column:46}},"6":{start:{line:62,column:34},end:{line:62,column:79}},"7":{start:{line:63,column:8},end:{line:63,column:41}},"8":{start:{line:65,column:8},end:{line:75,column:11}},"9":{start:{line:67,column:12},end:{line:67,column:57}},"10":{start:{line:69,column:31},end:{line:69,column:60}},"11":{start:{line:70,column:12},end:{line:70,column:48}},"12":{start:{line:71,column:12},end:{line:73,column:34}},"13":{start:{line:74,column:12},end:{line:74,column:54}},"14":{start:{line:77,column:8},end:{line:77,column:56}},"15":{start:{line:78,column:8},end:{line:78,column:56}},"16":{start:{line:83,column:19},end:{line:83,column:24}},"17":{start:{line:88,column:25},end:{line:88,column:65}},"18":{start:{line:89,column:24},end:{line:89,column:49}},"19":{start:{line:90,column:26},end:{line:90,column:68}},"20":{start:{line:92,column:31},end:{line:92,column:32}},"21":{start:{line:95,column:4},end:{line:99,column:5}},"22":{start:{line:96,column:8},end:{line:96,column:42}},"23":{start:{line:98,column:8},end:{line:98,column:15}},"24":{start:{line:100,column:4},end:{line:104,column:5}},"25":{start:{line:101,column:8},end:{line:101,column:81}},"26":{start:{line:103,column:8},end:{line:103,column:15}},"27":{start:{line:107,column:4},end:{line:139,column:5}},"28":{start:{line:108,column:25},end:{line:112,column:10}},"29":{start:{line:126,column:8},end:{line:126,column:32}},"30":{start:{line:127,column:8},end:{line:127,column:35}},"31":{start:{line:128,column:8},end:{line:132,column:15}},"32":{start:{line:134,column:8},end:{line:134,column:54}}},fnMap:{"0":{name:"toggleSpinner",decl:{start:{line:2,column:9},end:{line:2,column:22}},loc:{start:{line:2,column:29},end:{line:10,column:1}},line:2},"1":{name:"loadComments",decl:{start:{line:56,column:15},end:{line:56,column:27}},loc:{start:{line:56,column:36},end:{line:80,column:1}},line:56},"2":{name:"(anonymous_2)",decl:{start:{line:65,column:25},end:{line:65,column:26}},loc:{start:{line:65,column:38},end:{line:75,column:9}},line:65},"3":{name:"addComment",decl:{start:{line:84,column:15},end:{line:84,column:25}},loc:{start:{line:84,column:34},end:{line:140,column:1}},line:84}},branchMap:{"0":{loc:{start:{line:4,column:4},end:{line:6,column:5}},type:"if",locations:[{start:{line:4,column:4},end:{line:6,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:4},"1":{loc:{start:{line:5,column:32},end:{line:5,column:55}},type:"cond-expr",locations:[{start:{line:5,column:39},end:{line:5,column:46}},{start:{line:5,column:49},end:{line:5,column:55}}],line:5},"2":{loc:{start:{line:95,column:4},end:{line:99,column:5}},type:"if",locations:[{start:{line:95,column:4},end:{line:99,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:95},"3":{loc:{start:{line:100,column:4},end:{line:104,column:5}},type:"if",locations:[{start:{line:100,column:4},end:{line:104,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:100}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"e44349b68349e9835ebcbcb5a539b4c54d2c0f77"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2py6695m2f=function(){return actualCoverage;};}return actualCoverage;}cov_2py6695m2f();// Toggle spinner visibility
function toggleSpinner(show){cov_2py6695m2f().f[0]++;const spinner=(cov_2py6695m2f().s[0]++,document.getElementById("loading-spinner"));cov_2py6695m2f().s[1]++;if(spinner){cov_2py6695m2f().b[0][0]++;cov_2py6695m2f().s[2]++;spinner.style.display=show?(cov_2py6695m2f().b[1][0]++,"block"):(cov_2py6695m2f().b[1][1]++,"none");}else{cov_2py6695m2f().b[0][1]++;}// else {
//     console.warn("Spinner element not found in the DOM.");
// }
}// Display an error message in the UI
// function displayErrorMessage(message) {
//     const errorMessage = document.getElementById("error-message");
//     if (!errorMessage) {
//         console.error("Error message element not found in the DOM.");
//         return;
//     }
//     errorMessage.textContent = message;
//     errorMessage.style.display = "block";
//     setTimeout(() => {
//         errorMessage.style.display = "none";
//     }, 5000);
// }
//Fetch and display post details
// async function loadPostDetails(postId) {
//     toggleSpinner(true);
//     try {
//         const response = await fetch(`/get-post/${postId}`);
//         // if (!response.ok) throw new Error("Failed to load post");
//         const post = await response.json();
//         document.getElementById("post-title").textContent = post.restaurantName;
//         document.getElementById("post-location").textContent = `Location: ${post.location}`;
//         document.getElementById("post-content").textContent = post.content;
//         const imageElement = document.getElementById("post-image");
//         imageElement.src =  "images/NoImag.jpg";
//         if (post.imageUrl) imageElement.src = post.imageUrl 
//         // imageElement.onerror = () => {
//         //     imageElement.src = "images/NoImage.jpg";
//         // };
//         await loadComments(postId);
//     } catch (error) {
//         //console.error("Error loading post details:", error);
//         //displayErrorMessage("Failed to load post details.");
//     } finally {
//         toggleSpinner(false);
//     }
// }
// Load comments for a post
async function loadComments(postId){cov_2py6695m2f().f[1]++;cov_2py6695m2f().s[3]++;try{const response=(cov_2py6695m2f().s[4]++,await fetch(`/get-comments/${postId}`));// if (!response.ok) throw new Error("Failed to load comments");
const comments=(cov_2py6695m2f().s[5]++,await response.json());const commentsContainer=(cov_2py6695m2f().s[6]++,document.getElementById("comments-container"));cov_2py6695m2f().s[7]++;commentsContainer.innerHTML="";// Clear previous comments
cov_2py6695m2f().s[8]++;comments.forEach(comment=>{cov_2py6695m2f().f[2]++;cov_2py6695m2f().s[9]++;// if (!comment.text) comment.text = "[No comment provided]";
comment.timestamp=new Date().toISOString();const commentDiv=(cov_2py6695m2f().s[10]++,document.createElement("div"));cov_2py6695m2f().s[11]++;commentDiv.classList.add("comment");cov_2py6695m2f().s[12]++;commentDiv.textContent=`${comment.text} (Posted on: ${new Date(comment.timestamp).toLocaleString()})`;cov_2py6695m2f().s[13]++;commentsContainer.appendChild(commentDiv);});}catch(error){cov_2py6695m2f().s[14]++;console.error("Error loading comments:",error);cov_2py6695m2f().s[15]++;displayErrorMessage("Failed to load comments.");}}// Add a new comment
let isSubmitting=(cov_2py6695m2f().s[16]++,false);async function addComment(postId){cov_2py6695m2f().f[3]++;// if (isSubmitting) return; // Prevent multiple submissions
// isSubmitting = true;
const commentInput=(cov_2py6695m2f().s[17]++,document.getElementById("comment-input"));const commentText=(cov_2py6695m2f().s[18]++,commentInput.value.trim());const addCommentBtn=(cov_2py6695m2f().s[19]++,document.getElementById("add-comment-btn"));const MIN_COMMENT_LENGTH=(cov_2py6695m2f().s[20]++,5);// Validate input on the frontend
cov_2py6695m2f().s[21]++;if(commentText===""){cov_2py6695m2f().b[2][0]++;cov_2py6695m2f().s[22]++;alert("Comment cannot be empty!");// isSubmitting = false;
cov_2py6695m2f().s[23]++;return;}else{cov_2py6695m2f().b[2][1]++;}cov_2py6695m2f().s[24]++;if(commentText.length<MIN_COMMENT_LENGTH){cov_2py6695m2f().b[3][0]++;cov_2py6695m2f().s[25]++;alert(`Comment must be at least ${MIN_COMMENT_LENGTH} characters long!`);// isSubmitting = false;
cov_2py6695m2f().s[26]++;return;}else{cov_2py6695m2f().b[3][1]++;}// addCommentBtn.disabled = true; // Disable button during submission
cov_2py6695m2f().s[27]++;try{const response=(cov_2py6695m2f().s[28]++,await fetch(`/add-comment/${postId}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({text:commentText})}));// Handle backend errors
// if (!response.ok) {
//     const result = await response.json();
//     if (result.message) {
//         alert(result.message); // Display the backend's error message
//     } else {
//         throw new Error("Failed to add comment");
//     }
//     return;
// }
// If successful, reload comments and clear input
cov_2py6695m2f().s[29]++;commentInput.value="";cov_2py6695m2f().s[30]++;await loadComments(postId);cov_2py6695m2f().s[31]++;document.getElementById("comments-container").lastElementChild.scrollIntoView({behavior:"smooth"});}catch(error){cov_2py6695m2f().s[32]++;console.error("Error adding comment:",error);// displayErrorMessage("Failed to add comment.");
}finally{// addCommentBtn.disabled = false; // Re-enable button
// isSubmitting = false;
}}// Initialize post details and comments on page load
// document.addEventListener("DOMContentLoaded", () => {
//     const postId = new URLSearchParams(window.location.search).get("id");
//     if (postId) {
//         loadPostDetails(postId);
//         document
//             .getElementById("add-comment-btn")
//             .addEventListener("click", () => addComment(postId));
//     } 
//     // else {
//     //     displayErrorMessage("Post ID is missing in the URL.");
//     // }
// });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,